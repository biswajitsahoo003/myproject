hibernate.datasource.jdbc-url=${DB_URL}
hibernate.datasource.user=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.max-idle-time=6
hibernate.datasource.min-pool-size=3
hibernate.datasource.max-pool-size=15

spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5

logging.file=logback.xml

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false

management.endpoints.web.exposure.include=health,prometheus

#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6
rabbitmq.userinfo.name=queue.user.info

ticketing.details.url=${AKANA_URL}/incidentManagement/v3.4/tickets/
service.details.url=${AKANA_URL}/serviceManagement/v1.0/services/
service.categories.details.url=${AKANA_URL}/serviceManagement/v1.0/categories
plannedevents.details.url=${AKANA_URL}/plannedOutage/v2/tickets
service.request.management.url=${AKANA_URL}/SRManagement/v1.0/tickets

app.id=${AKANA_APPID}
secret.key=${AKANA_PWD}

server.servlet.contextPath=/optimus-ticketing/api
server.port=9030
token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000

rabbitmq.tokengen.name=token_refresh

swagger.info.title=Optimus Ticketing
swagger.info.description= Optimus ticketing have all the ticket related functionalities
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

management.endpoint.info.enabled=false

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}

#filter configurations
filters.request.snow=${SNOW_URL}
filters.request.baseurl=/api/now/stats
filters.username=${FILTER_USERNAME}
filters.password=${FILTER_PASSWORD}
filters.change_request=change_request
filters.sn_customerservice_case=sn_customerservice_case
filters.sc_req_item=sc_req_item

rabbitmq.customerle.queue=rabbitmq_customerle_details_queue

optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id
rabbitmq.get.partner.legal.entity.by.partner=rabbitmq_get_partner_legal_entity_by_partner
rabbitmq.get.cutomer.cuid.by.partner=rabbitmq_get_cutomer_cuid_by_partner

forex.api.username=${FOREX_API_UNAME}
forex.api.password=${FOREX_API_PWD}
forex.api.url=${FOREX_API_URL}

rabbitmq.ticket.create=rabbitmq_ticket_create
rabbitmq.get.customer.service.id=rabbitmq_get_customer_service_id