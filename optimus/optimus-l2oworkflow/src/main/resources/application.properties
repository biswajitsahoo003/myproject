hibernate.datasource.url=${DB_URL}
hibernate.datasource.username=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.minimum-idle=3
hibernate.datasource.maximum-pool-size=10
hibernate.datasource.idle-timeout=600000
hibernate.datasource.max-lifetime=1000000
hibernate.datasource.connection-timeout=30000
hibernate.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
hibernate.datasource.pool-name=l2oworkflow

#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5

management.endpoints.web.exposure.include=health,prometheus

spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

flowable.datasource.url=${FLOW_DB_URL}
flowable.datasource.username=${FLOW_DB_UNAME}
flowable.datasource.password=${FLOW_DB_PWD}
flowable.datasource.driver-class=com.mysql.jdbc.Driver
flowable.datasource.minimum-idle=3
flowable.datasource.maximum-pool-size=20
flowable.datasource.idle-timeout=600000
flowable.datasource.max-lifetime=1000000
flowable.datasource.connection-timeout=60000
flowable.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
flowable.datasource.pool-name=flowable
flowable.database-schema-update=false
flowable.enable-history-cleaning=false
flowable.history-level=activity
flowable.history-cleaning-after-days=7
flowable.history-cleaning-cycle=0 0 1 ? * SAT *

rabbitmq.l2o.queue=l2Oqueue
rabbitmq.userinfo.name=queue.user.info
logging.file=logback.xml

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false

#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6


server.servlet.contextPath=/optimus-l2oworkflow/api
server.port=9021
token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000

rabbitmq.tokengen.name=token_refresh


swagger.info.title=Optimus L2O Workflow
swagger.info.description= Optimus L2O Workflow handles all the l2o workflow related utilities
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

app.host=${APP_HOST}

management.endpoint.info.enabled=false

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}

customercode.customerlecode.queue=customercode_customerlecode_queue

notification.mail.from=no-reply@tatacommunications.com
notification.mail.bcc=manojkumar.rajakumaran@tatacommunications.com
notification.template.overdueReminder=ODMT
notification.template.validation=VTMT
notification.template.muxIntegration=MXINT
notification.template.taskAssignment=TSNT
notification.template.vendorArrangeFeMuxInstall=VFMXT
notification.template.vendorArrangeOspIbd=VFOIT
notification.template.vendorArrangeFeSurvey=VFSUT
notification.template.vendorTestResults=VTRT
notification.template.fieldEngineerRFInstall=FERFT
notification.template.fieldEngineerWirelessSurvey=FNWST
notification.template.customerSiteVisit=CSVNT
notification.template.fieldEngineerOSP=FEOST
notification.template.fieldEngineerIBD=FEIBT
notification.template.fieldEngineerSurvey=FENST
notification.template.fieldEngineerMuxInstall=FEMXT
notification.template.customerSiteVisitInternalCabling=CINCT
notification.template.customerSiteVisitRfInstall=CRFIT
notification.template.customerSiteVisitSurvey=CWSST
notification.template.customerCpeInstallation=CCDNT
notification.template.customerCpeDelivery=CCINT
notification.template.customerOffnetSiteSurvey=COSNT
notification.template.fieldEngineerOffnetSiteSurvey=FECIT
notification.template.fieldEngineerCpeInstallation=FESST
notification.template.customerSiteReadiness=CSRNT
notification.template.builderContract=BACNT
notification.template.taskAssignmentAdmin=TSANT
notification.template.ipc.taskCompletion=ITSCNT
notification.template.vendorWorkOrder=VWONT
notification.template.netpConfiguration=NETPT
notification.template.ssdump.failure=NSSDT


customer.support.email=${CUSTOMER_SUPPORT_EMAIL}
notification.mail.queue=notification_mail


queue.createservicesync=createservicesync_queue
queue.createclrsync=createclrsync_queue
queue.checkclrinfosync=checkclrsync_queue
queue.getclrsync=getclrsync_queue
queue.muxinfosync=muxinfosync_queue
queue.assigndummywanipsync=assigndummywanipsync_queue
queue.releasedummywanipsync=releasedummywanipsync_queue

queue.muxinfoasync=muxinfoasync_queue
queue.createserviceasync=createserviceasync_queue
queue.getclrasync=getclrasync_queue
queue.validatebtssync=ValidateBtsQueue
queue.ipservicesync=ipservicesync_queue
queue.txdowntimesync=txdowntimesync_queue
queue.ipserviceasync=ipserviceasync_queue
queue.setclrsync=setclrsync_queue
queue.setclrasync=setclrasync_queue
queue.setmfdclrsync=setmfdclrsync_queue
queue.setmfdclrasync=setmfdclrasync_queue
queue.setterminateclrsync=setterminateclrsync_queue
queue.setterminateclrssync=setterminateclrasync_queue
queue.muxinfoasync.submitfailure=muxinfoasync_failure_queue
queue.eorior.dependency=queue_eorior_dependency
rabbitmq.o2c.fulfillmentdate=rabbitmq_o2c_fulfillmentdate
rabbitmq.o2c.oe.fulfillmentdate=rabbitmq_o2c_oe_fulfillmentdate
rabbitmq.odr.oe.process.queue=rabbitmq_odr_oe_process_queue
optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id
activation.ip.configuration=activation_ip_configuration
activation.ip.terminate.configuration=activation_ip_terminate_configuration
activation.tx.configuration=activation_tx_configuration
activation.rf.configuration=activation_rf_configuration
activation.rf.terminate.configuration=activation_rf_terminate_configuration
activation.dummy.ip.configuration=activation_dummy_ip_configuration
activation.dummy.rf.configuration=activation_dummy_rf_configuration
activation.release.ip.configuration=activation_release_ip_configuration
rabbitmq.discount.price.request=rabbitmq.discount.price.request
# L2O report queue calls
attachment.queue=attachment
oms.mf.attatchment.queue=oms_mf_attachment
file.upload.base.dir=/opt/optimus-files
file.download.queue=download_queue
attachment.requestId.queue=attachment_requestid_queue



notification.template.commercial.reminder=CRN
notification.template.commercial.escalation=CEN
notification.template.commercial.approved=CAN
notification.template.commercial.group=CGAN
notification.template.commercial.assigne=CTAT

notification.template.manual.feasibility.assignee=MFTAT


#sap URl
sap.quantity.detail.url=${SAP_QUANTITY_URL}
sap.mrn.place.order.url=${SAP_MRL_PLACE_ORDER_URL}
sap.mrn.transfer.url=${SAP_WBS_TRANSFER_URL}
sap.autopr.url=${SAP_AUTO_PR_URL}
sap.user.name=${SAP_USER_NAME}
sap.password=${SAP_PASSWORD}

#google Map API
api.googlemap=https://maps.googleapis.com/maps/api/geocode/json
api.googlemap.key=AIzaSyCRkCzB1UIdv-oAOBg8ALsoCs0uFmeAJlU

oms.get.quote.commercial=oms.get.quote.commercial
rabbitmq.o2c.sitedetail=rabbitmq_o2c_sitedetail




queue.trigger_service_order_rule=queue.trigger_service_order_rule
queue.accountCreateSync=rabbitmq_accountCreateSync
queue.productCommSync.ipc=rabbitmq_productCommSync_ipc
queue.productCommSync=rabbitmq_productCommSync
queue.invoiceGenSync=rabbitmq_invoiceGenSync
queue.serviceactivation.availabilityslots=availableslots_queue

queue.accountCreateSync.network=rabbitmq_accountCreateSync_network
queue.productCommSync.network=rabbitmq_productCommSync_network
queue.invoiceGenSync.network=rabbitmq_invoiceGenSync_network
queue.intl.accountCreateSync.network=rabbitmq_intl_accountCreateSync_network

rabbitmq.manual.feasibility.request=manual_feasibility_request

rabbitmq.ipc.si.details.queue=rabbitmq_ipc_si_details_queue 
rabbitmq.o2c.si.terminate.queue=rabbitmq_o2c_si_terminate_queue 
queue.accountCreateSync.network.cpe=rabbitmq_accountCreateSync_network_cpe
queue.productCommSync.network.cpe=rabbitmq_productCommSync_network_cpe
queue.invoiceGenSync.network.cpe=rabbitmq_invoiceGenSync_network_cpe
queue.lr.service.terminate=rabbitmq_lr_service_terminate
queue.geneva.service.terminate=rabbitmq_geneva_service_terminate
queue.invoice.termination.lr=rabbitmq_invoice_terminate_lr
queue.productTermSync.network=rabbitmq_productTermSync_network
queue.accountCreateSync.check=rabbitmq_accountCreateSync_check
queue.serviceTermSync.network=rabbit_serviceTermSync_network
queue.productTermSync=rabbitmq_productTermSync
queue.apply.tax=apply_tax_queue
queue.ipc.apply.tax=rabbitmq_ipc_apply_tax_queue


#Cancellation Workflow Queues
queue.cancellationInvoiceGenSync=rabbitmq_cancellation_invoiceGenSync
queue.cancellationProductCommSync=rabbitmq_cancellation_productCommSync
queue.cancellationProductTermSync=rabbitmq_cancellation_productTermSync

rabbitmq.o2c.ipc.order.stage.queue=rabbitmq_o2c_ipc_order_stage_queue
rabbitmq.o2c.ipcfulfillment=rabbitmq_o2c_ipcfulfillment
save.mf.response.in.oms.mq=rabbitmq_save_mf_response_in_oms_queue

queue.get.mstUserGroups=get.mst.user.groups
notification.template.manualFeasibility.assignee=MFNAT
rabbitmq.o2c.feasibility=rabbitmq_o2c_feasibility

notification.template.manualFeasibility.close=MFNCT
notification.template.manualFeasibility.return=MFNRT
forex.api.username=${FOREX_API_UNAME}
forex.api.password=${FOREX_API_PWD}
forex.api.url=${FOREX_API_URL}


### WIRELESS ONE QUEUES ####
queue.wireless1.ssdump=queue_wireless1_ssdump
queue.wireless1.getpingtestdetails=queue_wireless1_getpingtestdetails
queue.wireless1.setpingstability=queue_wireless1_setpingstability
queue.rfinventory=rfinventory_queue
queue.rf.e2e.inventory=rfe2einventory_queue
rabbitmq.fetch.mf.response.in.oms.mq=fetch_mf_response_in_oms_mq
rabbitmq.cpe.bom.rentalsales.queue=rabbitmq_cpe_bom_rentalsales_queue
cmd.task.queue = cmd_task_queue
rabbitmq.final.price=rabbitmq_final_price
oms.get.optid.data.by.quotecode=oms_get_optid_data_by_quotecode


#Pre feasible MF Queue
save.pre.mf.response.in.oms.mq=save_pre_mf_response_in_oms_mq
rabbitmq.save.mf.npl.response.in.oms.mq=save.mf.npl.response.in.oms.mq
rabbitmq.related.task.deletion = rabbitmq_related_task_deletion
rabbitmq.user.details.queue=queue.user.group.details
notification.template.notification.template.customerSiteVisitInternalCabling=CSVIC
rabbitmq.quote.arch.request=rabbitmq_quote_arch_request
ipc.estimateddelivery.queue=rabbitmq_estimateddelivery_queue
rabbitmq.ipc.si.solutions.queue=rabbitmq_ipc_si_solutions_queue
rabbitmq.askPriceComment.queue=rabbitmq_askPriceComment_queue
rabbitmq.mf.task.triggered.queue = rabbitmq_mf_task_triggered_queue
