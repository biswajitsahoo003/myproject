hibernate.datasource.jdbc-url=${DB_URL}
hibernate.datasource.user=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.max-idle-time=6
hibernate.datasource.min-pool-size=3
hibernate.datasource.max-pool-size=15

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5



spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

management.endpoints.web.exposure.include=health,prometheus

logging.file=logback.xml

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false

#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6

rabbitmq.userinfo.name=queue.user.info


server.servlet.contextPath=/optimus-serviceinventory/api
server.port=9018
token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000

rabbitmq.tokengen.name=token_refresh
rabbitmq.si.order.get.queue=si_get_order


swagger.info.title=Optimus Serviceinventory
swagger.info.description= Optimus Service inventory handles all the inventory related utilities
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

api.googlemap=https://maps.googleapis.com/maps/api/geocode/json

api.googlemap.key=AIzaSyA2rg44_SmhlM_EhKGDcxROEZwBl2Gxpd0

management.endpoint.info.enabled=false

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}
info.oms.get.order.count.queue=oms_get_order_count_queue
rabbitmq.userinfo.le=rabbitmq_userinfo_le
rabbitmq.product.get.all=rabbitmq_product_get_all
oms.customer.queue = oms_customer_queue
rabbitmq.si.ias.queue=rabbitmq_si_ias_queue
rabbitmq.si.gvpn.queue=rabbitmq_si_gvpn_queue
rabbitmq.orderIdInRespecToServiceId.queue=rabbitmq_orderIdInRespectToServiceId_queue
rabbitmq.si.related.details.queue=rabbitmq_si_related_details_queue
rabbitmq.service.handover.inventory=serviceInventoryHandoverQueue
rabbitmq.service.handover.inventory.sdwan=sdwanInventoryHandoverQueue
rabbitmq.si.order.get.izopc.queue=rabbitmq_si_order_get_izopc_queue
rabbitmq.user.products.queue=rabbitmq_user_products_queue
service.handover.complete.queue=service_handover_complete_queue
queue.rfinventory=rfinventory_queue
queue.rf.e2e.inventory=rfe2einventory_queue
rabbitmq.get.partner.legal.entities=rabbitmq_get_partner_legal_entities
#servicealias configurations 

si.base.url=${AKANA_URL}
si.request.url=/serviceAliasManagement/v1.0
si.appId=${AKANA_APPID}
si.appSecret=${AKANA_PWD}

optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id
oms.ipc.macd.queue= oms_ipc_macd_queue
rabbitmq.get.cutomer.cuid.by.partner=rabbitmq_get_cutomer_cuid_by_partner
rabbitmq.ipc.si.related.details.queue=rabbitmq_ipc_si_related_details_queue
rabbitmq.ipc.si.solutions.queue=rabbitmq_ipc_si_solutions_queue
rabbitmq.ipc.si.details.queue=rabbitmq_ipc_si_details_queue
rabbitmq.o2c.si.terminate.queue=rabbitmq_o2c_si_terminate_queue
rabbitmq.o2c.migration.si.details.queue=rabbitmq_o2c_migration_si_details_queue
rabbitmq.si.order.details.primary.secondary.queue=rabbitmq_si_order_details_primary_secondary_queue
rabbitmq.si.order.add.site.pri.sec.queue=rabbitmq_si_order_add_site_pri_sec
rabbitmq.service.get.selected.site.details=rabbitmq_service_get_selected_site_details
rabbitmq.product.izosdwan.cpeportdetails=rabbitmq_product_get_cpe_port_details
rabbitmq.si.details.by.customer.queue=rabbitmq.si.details.by.customer.queue
rabbitmq.si.port_mode.detail=rabbitmq.si.port_mode.detail

### O2C MACD QUEUE ###
oms.o2c.macd.queue=oms_o2c_macd_queue

forex.api.username=${FOREX_API_UNAME}
forex.api.password=${FOREX_API_PWD}
forex.api.url=${FOREX_API_URL}

rabbitmq.gvpn.si.info.webex.queue=rabbitmq_gvpn_si_info_webex_queue
rabbitmq.search.gvpn.si.info.webex.queue = rabbitmq_search_gvpn_si_info_webex_queue
rabbitmq.download.gvpn.si.info.webex.queue = rabbitmq_download_gvpn_si_info_webex_queue
rabbitmq.gvpn.si.info.serviceid.webex.queue = rabbitmq_gvpn_si_info_serviceid_webex_queue

rabbitmq.si.order.details.queue=rabbitmq_si_order_details_queue
rabbitmq.si.service.details.list.queue=rabbitmq_si_service_details_list_queue
rabbitmq.si.npl.details.queue = rabbitmq_si_npl_details_queue
rabbitmq.si.order.get.service.queue=rabbitmq_si_order_get_service_queue

rabbitmq.si.order.add.site.queue = rabbitmq_si_order_add_site_queue

rabbitmq.get.service.details=oms_get_service_detail
rabbitmq.customer.le.by.customerids=rabbitmq_customer_le_by_customerids
rabbitmq.customer.le.by.customerid = rabbitmq_customer_le_by_customerid

rabbitmq.si.service.get.contract.info.queue = rabbitmq_si_service_get_contract_info_queue

rabbitmq.get.partner.legal.entity.by.partner=rabbitmq_get_partner_legal_entity_by_partner
rabbitmq.si.nde.details.queue=si_nde_details_queue
rabbitmq.si.nde.attributes.details.queue=rabbitmq_si_nde_attributes_details_queue

rabbitmq.si.npl.details.mc.queue=rabbitmq_si_npl_details_mc_queue



#versa api related variables
versa.api.cpe.status.url = /vnms/appliance/appliance?offset=0&limit=10000
cisco.api.bulk.cpe.url=/dataservice/device
cisco.api.cpe.url=/dataservice/device/interface?deviceId=
cisco.api.siteList.url=/dataservice/template/policy/list/site
cisco.api.vedgeInventory.url=/dataservice/device/vedgeinventory/detail

cisco.api.supportapplication.url=/dataservice/device/dpi/supported-applications?deviceId=

versa.api.create.user.application = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications
versa.api.create.user.application.common.temp = /api/config/devices/template/DYNAMICORGNAME-DataStore/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications
versa.api.edit.user.application = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications/user-defined-application/DYNAMICAPPNAME
versa.api.edit.user.application.common.temp = /api/config/devices/template/DYNAMICORGNAME-DataStore/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications/user-defined-application/DYNAMICAPPNAME
versa.api.cpe.grouped.by.template = /nextgen/deviceGroup/deviceGroupNamesByTemplate?template=DYNAMICTEMPLATENAME&offset=0&limit=10000
versa.api.template.sync.status = /vnms/template/deviceGroup/deviceStatus
versa.api.commit.template = /vnms/template/applyTemplate/DYNAMICTEMPLATENAME/devices?reboot=false
versa.api.get.sdwan.policy.by.name = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/policies/sdwan-policy-group/Default-Policy/rules/rule/DYNAMICRULENAME?format=json&deep=true&offset=0&limit=10000
versa.api.get.qos.policy.by.name = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/app-qos-policies/app-qos-policy-group/Default-Policy/rules/app-qos-policy/DYNAMICRULENAME?format=json&deep=true&offset=0&limit=10000
versa.api.get.user.applications = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications/user-defined-application?deep=true&offset=0&limit=10000
versa.api.get.pre.defined.applications = /vnms/spack/predefined?xPath=/predefined/config/predefined-applications/application-identification/applications
versa.api.get.user.app.by.name = /api/config/devices/template/COMMONTEMPLATE/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications/user-defined-application/DYNAMICAPPNAME?format=json&deep=true
versa.api.get.fp.profile = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/forwarding-profiles/forwarding-profile?format=json&deep=true&offset=0&limit=10000
versa.api.get.qos.profile = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/qos-profiles/qos-profile?format=json&deep=true&offset=0&limit=10000
versa.api.get.sla.profile = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/sla-profiles/sla-profile?format=json&deep=true&offset=0&limit=10000
versa.api.get.address = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/objects/addresses?format=json&deep=true&offset=0&limit=10000
versa.api.edit.qos.policy = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/app-qos-policies/app-qos-policy-group/Default-Policy/rules/app-qos-policy/DYNAMICRULENAME
versa.api.edit.sdwan.policy = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/policies/sdwan-policy-group/Default-Policy/rules/rule/DYNAMICRULENAME
versa.api.user.defined.apps = /api/config/devices/template/DYNAMICORGNAME-DataStore/config/orgs/org-services/DYNAMICORGNAME/application-identification/user-defined-applications/user-defined-application?deep=true&offset=0&limit=10000
versa.api.address.group = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/objects/address-groups?format=json&deep=true&offset=0&limit=10000
versa.api.get.zones = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/objects/zones?format=json&deep=true&offset=0&limit=10000
versa.api.get.user.urls = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/url-filtering/user-defined-url-categories/url-category?format=json&deep=true&offset=0&limit=10000
versa.api.get.qos.policy = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/app-qos-policies/app-qos-policy-group/Default-Policy/rules/app-qos-policy?format=json&deep=true&offset=0&limit=10000
versa.api.get.sdwan.policy = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/policies/sdwan-policy-group/Default-Policy/rules?format=json&deep=true&offset=0&limit=10000
versa.api.get.wan.status = /vnms/dashboard/appliance/DYNAMICCPENAME/live?command=orgs/org/DYNAMICORGNAME/sd-wan/sla-monitor/status/DYNAMICCONTROLLERNAME?deep=true
versa.api.pre.defined.urls = /vnms/spack/predefined?xPath=/predefined/config/predefined-url-categories/url-categories/url-category
versa.api.task.id.details = /vnms/tasks/task/DYNAMICTASKID?deep=true
versa.api.cpe.interface.details = /vnms/dashboard/appliance/CPE_Name/live?command=orgs/org/Org_Name/sd-wan/wan-interfaces
versa.api.configured.interface.bw=/api/config/devices/device/CPE_Name/config/interfaces?deep=true&format=json
versa.api.edit.forwarding.profile=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/forwarding-profiles/forwarding-profile/DYNAMICFPNAME
versa.api.get.fp.by.name=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/forwarding-profiles/forwarding-profile/DYNAMICFPNAME?deep=true
versa.analytics.login =/versa/login
versa.analytics.logout=/versa/logout
versa.analytics.app.usage.by.link = /versa/analytics/v1.0.0/data/provider/tenants/DYNAMICORGNAME/features/SDWAN?start-date=<Start_Date>&end-date=<End_Date>&q=app(appId)&metrics=bandwidth&metrics=volume-rx&metrics=volume-tx&metrics=volume-rx&metrics=volume-tx&metrics=bw-tx&metrics=bw-rx&metrics=sessions&ds=aggregate&qt=table&fq=(site,accCkt:\"DYNAMICCPENAME,DYNAMICLINKNAME\")&count=10000
versa.analytics.app.bw.consumption.url = /versa/analytics/v1.0.0/data/provider/tenants/<Org_Name>/features/SDWAN?start-date=<START_DATE>&end-date=<END_DATE>&q=app(appId,siteName,accCktName)&metrics=bandwidth&metrics=volume-rx&metrics=volume-tx&metrics=volume-rx&metrics=volume-tx&metrics=bw-tx&metrics=bw-rx&metrics=sessions&ds=aggregate&qt=table&count=10000
versa.analytics.site.usage.by.app.url =/versa/analytics/v1.0.0/data/provider/tenants/DYNAMICORGNAME/features/SDWAN?start-date=<Start_Date>&end-date=<End_Date>&q=app(appId,site,accCkt)&metrics=bw-tx&metrics=bw-rx&metrics=bandwidth&qt=table&fq=(appId:\"<Appln_Name>\")&count=10000 
versa.analytics.sdwan.traffic.util.url =/versa/analytics/v1.0.0/data/provider/tenants/DYNAMICORGNAME/features/SDWAN?start-date=<Start_Date>&end-date=<End_Date>&q=linkusage(site,accCkt,uplinkBW,downlinkBW)&qt=table&count=
versa.analytics.dia.traffic.util.url =/versa/analytics/v1.0.0/data/provider/tenants/DYNAMICORGNAME/features/SDWAN?start-date=<Start_Date>&end-date=<End_Date>&q=usage(site,accCkt,uplinkBW,downlinkBW)&fq=(accessType:DIA)&qt=table&count=
versa.api.put.traffic.steering.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/policies/sdwan-policy-group/Default-Policy/rules
versa.api.put.qos.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/app-qos-policies/app-qos-policy-group/Default-Policy/rules
versa.api.get.traffic.steering.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/policies/sdwan-policy-group/Default-Policy/rules/rule
versa.api.get.qos.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/class-of-service/app-qos-policies/app-qos-policy-group/Default-Policy/rules/app-qos-policy
versa.api.fp.profile.create =/api/config/devices/template/<Template name>/config/orgs/org-services/<Organization name>/sd-wan/forwarding-profiles
versa.api.sla.profile.by.name.url =/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/sla-profiles/sla-profile/DYNAMICSLAPROFILENAME?deep=true
versa.sla.profile.create.url =/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/sla-profiles
versa.sla.profile.edit.url = /api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/sd-wan/sla-profiles/sla-profile/DYNAMICSLAPROFILENAME
versa.api.wan.path.url = /api/config/devices/template/DYNAMICTEMPLATENAME/config/system/sd-wan/site/wan-interfaces?deep=true&format=json
versa.api.firewall.getPolicy.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group
versa.api.firewall.getConfiguration.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group/DYNAMICACCESSPOLICYNAME/rules/access-policy
versa.api.firewall.get.config.for.policy=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group/DYNAMICACCESSPOLICYNAME/rules/access-policy/DYNAMICRULENAME
versa.api.firewall.get.predefined.services=/vnms/spack/predefined?xPath=/predefined/config/predefined-services
versa.api.firewall.get.custom.services=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/objects/services/service

rabbitmq.product.get.by.id=rabbitmq_product_get_by_id
oms.macd.queue=oms_macd_queue
rabbitmq.wholesale.customer.interconnect=rabbitmq_wholesale_customer_interconnect
rabbitmq.service.gsc.countries=rabbitmq_service_gsc_countries
rabbitmq.service.gsc.product.names=rabbitmq_service_gsc_product_names

rabbitmq.wholesale.customer.interconnect.name=rabbitmq_wholesale_customer_interconnect_name
rabbitmq.inventory.outpulse.queue=rabbitmq_inventory_outpulse_queue

rabbitmq.get.lm.provider.access.type=rabbitmq_get_lm_provider_access_type

rabbitmq.get.customer.service.id=rabbitmq_get_customer_service_id
olio.request.url=${OLIO_REQUEST_URL}
olio.node.json.url=${OLIO_NODE_JSON_URL}
rabbitmq.engagementInfo.get=rabbitmq_engagementInfo_get

rabbitmq.si.attribute.queue=rabbitmq_si_attribute_queue
rabbitmq.inventory.gsc.abbreviation.queue=rabbitmq_inventory_gsc_abbreviation_queue

rabbitmq.si.service.underprov.queue = rabbitmq_si_service_underprov_queue

rabbitmq.si.iwan.queue=rabbitmq_si_iwan_queue
rabbitmq.iwan.packetdrop.queue=rabbitmq_iwan_packetdrop_queue


rabbitmq.renewals.si.validate.details.queue=rabbitmq.renewals.si.validate.details.queue
rabbitmq.renewals.si.details.queue=rabbitmq.renewals.si.details.queue


rabbitmq.si.service.detailsByServiceId = rabbitmq.si.service.detailsByServiceId
rabbitmq.si.service.details.by.serviceId.and.product = rabbitmq.si.service.details.by.serviceId.and.product
rabbitmq.si.order.details.inactive.queue=rabbitmq_si_order_details_inactive_queue
rabbitmq.si.npl.details.inactive.queue=rabbitmq_si_npl_details_inactive_queue
rabbitmq.si.related.details.inactive.queue=rabbitmq_si_related_details_inactive_queue
rabbitmq.si.price.revision.detail.queue=rabbitmq_si_price_revision_detail_queue
rabbitmq.si.o2c.update.commission.date.queue=rabbitmq_si_o2c_update_commission_date_queue

# firewall urls
versa.api.firewall.get.listofnames.policyrule =/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group
versa.api.firewall.get.config.policyrule=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group/POLICYNAME/rules/access-policy
versa.api.put.firewall.url=/api/config/devices/template/DYNAMICTEMPLATENAME/config/orgs/org-services/DYNAMICORGNAME/security/access-policies/access-policy-group/POLICYNAME/rules
rabbitmq.service.details.queue = rabbitmq.service.details.queue

cisco.api.policyactivated.vsmart.url=/dataservice/template/policy/vsmart
cisco.api.clienttoken.url=/dataservice/client/token
cisco.api.policyactivated.vpnList.url=/dataservice/template/policy/list/vpn/DYNAMICVPNID
cisco.api.policyactivated.appPolicy.url=/dataservice/template/policy/definition/approute/DYNAMICAPPROUTEDEFID
cisco.api.policyactivated.dataPolicy.url=/dataservice/template/policy/definition/data/DYNAMICDATADEFID
cisco.api.applicationPolicy.url=/dataservice/template/policy/list/app
cisco.api.addressPolicy.url=/dataservice/template/policy/list/dataprefixall
cisco.api.slaPolicyList.url=/dataservice/template/policy/list/sla

cisco.api.addressPolicyPut.url=/dataservice/template/policy/list/dataprefix

rabbitmq.si.order.wholesale.get.queue=si_wholesale_order
