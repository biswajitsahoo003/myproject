hibernate.datasource.jdbc-url=${DB_URL}
hibernate.datasource.user=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.max-idle-time=6
hibernate.datasource.min-pool-size=3
hibernate.datasource.max-pool-size=15

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5

notification.mail.queue=notification_mail

logging.file=logback.xml

#thread config
threadpool.core-pool=50
threadpool.max-pool=200
threadpool.queue.capacity=1000
threadpool.timeout=60

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.simple.concurrency=15
spring.rabbitmq.listener.simple.max-concurrency=15
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false

spring.mail.default-encoding=UTF-8
spring.mail.host=${SMTP_HOST}
spring.mail.username=${SMTP_UNAME}
spring.mail.from=no-reply@tatacommunications.com
spring.mail.password=${SMTP_PWD}
spring.mail.port=${SMTP_PORT}
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=false


#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6
server.port=8090
server.servlet.contextPath=/optimus-notification/api

management.endpoints.web.exposure.include=health,prometheus

token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000
app.host=${APP_HOST}

#token.refresh.time=30000000
#token.expiry.time=60000000
#token.purge.time=180000000

rabbitmq.tokengen.name=token_refresh
cof.docusign.upload.path=/opt/optimus-files/cof/docusign/

notification.mail.from=no-reply@tatacommunications.com
notification.mail.template=ANT
notification.mail.bcc=${MAIL_BCC}

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

swagger.info.title=Optimus Notification
swagger.info.description= Notification is a microservice , which is the Notification framework for optimus 
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

info.oms.get.usernotification.subscription.queue=oms_get_user_notification_subscription_details
info.docusign.cof.sign=docusign_cof_sign
info.docusign.cof.response=docusign_cof_response
mq.docusign.notification.queue=mq_docusign_notification_queue
info.docusign.notification.response=docusign_notification_response
email.test.id=anandhi.vijayaraghavan@tatacommunications.com

rabbitmq.userinfo.name=queue.user.info
rabbitmq.userinfo.get=queue.user.get
#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

docusign.base_url=${DOCUSIGN_URL}
docusign.username=${DOCUSIGN_UNAME}
docusign.password=${DOCUSIGN_PWD}
docusign.integrator_key=${DOCUSIGN_KEY}

application.env=${APP_ENV}
email.check=${ALLOWED_EMAILS}
management.endpoint.info.enabled=false

info.docusign.audit=docusign_audit
info.docusign.resend=docusign_resend
info.docusign.getdocument=docusign_getdocument
info.docusign.envelope.retry=docusign_envelope_retry
info.docusign.error.response=docusign_error_process
info.docusign.get.customer.request=docusign_customer_details

mq.user.notification.create=mq_user_notification_create
mq.get.all.notification.user=mq_get_all_notification_user
mq.user.notification.update=mq_user_notification_update

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}


info.docusign.get.document.request=info_docusign_get_document_request

optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id

forex.api.username=${FOREX_API_UNAME}
forex.api.password=${FOREX_API_PWD}
forex.api.url=${FOREX_API_URL}
info.docusign.retry=docusign_retry
webhook.docusign.status=webhook_docusign_status