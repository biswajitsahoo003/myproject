<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tcl.optimus</groupId>
	<artifactId>optimus-performance</artifactId>
	<packaging>jar</packaging>

	<name>optimus-performance</name>
	<description>Optimus Performance</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>optimus</docker.image.prefix>
		<it.skiptest>true</it.skiptest>
		<jacoco.version>0.8.2</jacoco.version>
		<sonar.plugin.version>3.2</sonar.plugin.version>
		<basedir>/</basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.tcl.optimus</groupId>
			<artifactId>optimus-common</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vertica</groupId>
			<artifactId>vertica-jdbc-driver</artifactId>
			<version>9.2.0-0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/vertica-jdbc-9.2.0-0.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.teradata.jdbc</groupId>
			<artifactId>terajdbc4</artifactId>
			<version>16.20.00.10</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/terajdbc4.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.teradata.jdbc</groupId>
			<artifactId>tdgssconfig</artifactId>
			<version>16.20.00.10</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/tdgssconfig.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.metrics</groupId>
			<artifactId>spring-metrics</artifactId>
			<version>0.5.1.RELEASE</version>
		</dependency>
		<!-- Micrometer Prometheus registry -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkCount>3</forkCount>
					<reuseForks>true</reuseForks>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<skipTests>${it.skiptest}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<version>1.0</version>
</project>
