hibernate.datasource.url=${DB_URL}
hibernate.datasource.username=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.minimum-idle=3
hibernate.datasource.maximum-pool-size=25
hibernate.datasource.idle-timeout=600000
hibernate.datasource.max-lifetime=1000000
hibernate.datasource.connection-timeout=30000
hibernate.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
hibernate.datasource.pool-name=service-fulfillment

#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5
#spring.profiles.active=dev
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

flowable.datasource.url=${FLOW_DB_URL}
flowable.datasource.username=${FLOW_DB_UNAME}
flowable.datasource.password=${FLOW_DB_PWD}
flowable.datasource.driver-class=com.mysql.jdbc.Driver
flowable.datasource.minimum-idle=3
flowable.datasource.maximum-pool-size=20
flowable.datasource.idle-timeout=600000
flowable.datasource.max-lifetime=1000000
flowable.datasource.connection-timeout=60000
flowable.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
flowable.datasource.pool-name=flowable
#flowable.database-schema-update=true
flowable.database-schema-update=false

rabbitmq.l2o.queue=l2Oqueue
rabbitmq.userinfo.name=queue.user.info
logging.file=logback.xml

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.cache.channel.size=5000

#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6


server.servlet.contextPath=/optimus-nw-augmentation/api
server.port=9059
token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000

rabbitmq.tokengen.name=token_refresh


swagger.info.title=Optimus Network Augmentation
swagger.info.description= Optimus Network Augmentation handles all the Eor fulfillment related utilities
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

app.host=${APP_HOST}
application.env=${APP_ENV}

management.endpoint.info.enabled=false

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}

customercode.customerlecode.queue=customercode_customerlecode_queue

notification.mail.from=no-reply@tatacommunications.com
notification.mail.bcc=manojkumar.rajakumaran@tatacommunications.com
notification.template.overdueReminder=ODMT
notification.template.validation=VTMT
notification.template.muxIntegration=MXINT
notification.template.taskAssignment=TSNT
notification.template.vendorArrangeOspIbd=VFOIT
notification.template.vendorTestResults=VTRT
notification.template.customerSiteVisit=CSVNT
notification.template.fieldEngineerSurvey=FENST
notification.template.customerSiteReadiness=CSRNT
notification.template.builderContract=BACNT
notification.template.ipc.taskCompletion=ITSCNT
notification.template.vendorWorkOrder=VWONT
notification.template.customeroverdue=CNORT
notification.template.notifypocreation=POCNT
notification.template.notifymrncreation=MRNCT
notification.template.notifycustomeracceptance=CUANT
notification.template.notifycustomertasks=CUTNT
notification.template.customerwelcome=CHNT
notification.template.customerwelcome.v2=CWMV2
notification.template.circuittermination=CTTNT
notification.template.netpConfiguration=NETPT
notification.template.taskAssignmentAdmin=TSANT
notification.template.automigration.failure=AMFNT
customer.support.email=${CUSTOMER_SUPPORT_EMAIL}
notification.mail.queue=notification_mail
notification.template.commercial.reminder=CRN
notification.template.commercial.escalation=CEN
notification.template.commercial.approved=CAN
notification.template.commercial.group=CGAN
notification.template.commercial.assigne=CTAT


#GeoCode URI
geocode.api.url=${GEOCODE_API_URL}
geocode.api.username=${GEOCODE_API_USERNAME}
geocode.api.password=${GEOCODE_API_PASSWORD}


#google Map API
api.googlemap=https://maps.googleapis.com/maps/api/geocode/json
api.googlemap.key=AIzaSyCRkCzB1UIdv-oAOBg8ALsoCs0uFmeAJlU


reminder.cycle=${REMINDER_CYCLE}

optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id
forex.api.username=
forex.api.password=
forex.api.url=
rabbitmq.userinfo.name=queue.user.info
rabbitmq.user.details.queue=queue.user.group.details
sap.grn.response=sap_grn_response
mq.sap.grnstatus.queue=mq_sap_grnstatus_queue


app.cramer.baseUrl=${CRAMER_BASEURL}
app.createNode.baseUrl=${CRAMER_CREATE_NODE}
app.cardAddUrl=${CRAMER_ADD_CARD}
app.cardstatus=${CRAMER_CARD_STATUS}

#app.cramer.baseUrl=http://10.133.208.112/optimus-nw-cramer-api/api/v1
#app.createNode.baseUrl=http://uswv1vusp002a.vsnl.co.in:8102/CWSInventoryCreator4Eor/rest
#app.cardAddUrl=http://uswv1vusp002a.vsnl.co.in:8102/CWSInventoryCreator4Eor/rest/node/createCard
#app.cardstatus=http://uswv1vusp002a.vsnl.co.in:8102/CWSInventoryCreator4Eor/rest/object/setProvisionStatus


document.service.provider=swift

swift.auth.url=${SWIFT_AUTH_URL}
swift.documentservice.url=${SWIFT_DOCSERVICE_URL}
swift.username=${SWIFT_USER}
swift.auth.key=${SWIFT_AUTH_KEY}

#swift.auth.url=http://inp44xdapp3221/auth
#swift.documentservice.url=http://inp44xdapp3221/swift/v1
#swift.username=optnwachn1:swift
#swift.auth.key=nyTwxCcqvjOCQW0ImqJA3QN05PGh8J5oLAKlsdrX

app.id=
secret.key=
