hibernate.datasource.url=${DB_URL}
hibernate.datasource.username=${DB_UNAME}
hibernate.datasource.password=${DB_PWD}
hibernate.datasource.driver-class=com.mysql.jdbc.Driver
hibernate.datasource.minimum-idle=3
hibernate.datasource.maximum-pool-size=25
hibernate.datasource.idle-timeout=600000
hibernate.datasource.max-lifetime=1000000
hibernate.datasource.connection-timeout=30000
hibernate.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
hibernate.datasource.pool-name=service-fulfillment

#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE

spring.quartz.job-store-type = memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 5

management.endpoints.web.exposure.include=health,prometheus

spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

flowable.datasource.url=${FLOW_DB_URL}
flowable.datasource.username=${FLOW_DB_UNAME}
flowable.datasource.password=${FLOW_DB_PWD}
flowable.datasource.driver-class=com.mysql.jdbc.Driver
flowable.datasource.minimum-idle=3
flowable.datasource.maximum-pool-size=20
flowable.datasource.idle-timeout=600000
flowable.datasource.max-lifetime=1000000
flowable.datasource.connection-timeout=60000
flowable.datasource.transaction-isolation=TRANSACTION_READ_COMMITTED
flowable.datasource.pool-name=flowable

flowable.database-schema-update=false
flowable.eventregistry.enabled=false
flowable.enable-history-cleaning=false
flowable.history-level=activity
flowable.history-cleaning-after-days=240
flowable.history-cleaning-cycle=0 0 1 ? * SAT *

rabbitmq.l2o.queue=l2Oqueue
rabbitmq.userinfo.name=queue.user.info
logging.file=logback.xml

#AMPQ related properties
spring.rabbitmq.host=${MQ_HOST}
spring.rabbitmq.port=${MQ_PORT}
spring.rabbitmq.username=${MQ_UNAME}
spring.rabbitmq.password=${MQ_PWD}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.direct.default-requeue-rejected=false
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.cache.channel.size=5000

#redis related configuration
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PWD}
spring.redis.port=${REDIS_PORT}
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=6
spring.redis.jedis.pool.min-idle=6


server.servlet.contextPath=/optimus-preparefulfillment/api
server.port=9052
token.refresh.time=300000
token.expiry.time=600000
token.purge.time=1800000

rabbitmq.tokengen.name=token_refresh


swagger.info.title=Optimus Preparefulfillment
swagger.info.description= Optimus Prepare fulfillment handles all the prepare fulfillment related utilities
swagger.info.version=1.0
swagger.info.toc=https://www.tatacommunications.com/policies/terms-of-use/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/opt/optimus-files/

system.proxy.host=${SYSTEM_PROXY_HOST}
system.proxy.port=${SYSTEM_PROXY_PORT}

#keycloak configurations
keycloak.auth-server-url=${AUTH_URL}
keycloak.realm=master
keycloak.principal-attribute=preferred_username
keycloak.resource=optimus
keycloak.public-client=true
keycloak.proxy-url=${KEYCLOAK_PROXY}
keycloak.ssl-required=none
keycloak.disable-trust-manager=true
keycloak.bearer-only=true

app.host=${APP_HOST}
application.env=${APP_ENV}

management.endpoint.info.enabled=false

swift.api.hash.password=${SWIFT_HASH}
swift.api.container=${SWIFT_CONTAINER}
swift.api.authurl=${SWIFT_AUTHURL}
swift.api.username=${SWIFT_USERNAME}
swift.api.password=${SWIFT_PASSWORD}
swift.api.tenantname=${SWIFT_TENANTNAME}
swift.api.enabled=${SWIFT_ENABLED}
temp.upload.url.expiryWindow=${SWIFT_UPLOADEXPIRYWINDOW}
temp.download.url.expiryWindow=${SWIFT_DOWNLOADEXPIRYWINDOW}

customercode.customerlecode.queue=customercode_customerlecode_queue

notification.mail.from=no-reply@tatacommunications.com
notification.mail.bcc=manojkumar.rajakumaran@tatacommunications.com
notification.template.overdueReminder=ODMT
notification.template.validation=VTMT
notification.template.muxIntegration=MXINT
notification.template.taskAssignment=TSNT
notification.template.vendorArrangeOspIbd=VFOIT
notification.template.vendorTestResults=VTRT
notification.template.customerSiteVisit=CSVNT
notification.template.fieldEngineerSurvey=FENST
notification.template.customerSiteReadiness=CSRNT
notification.template.builderContract=BACNT
notification.template.ipc.taskCompletion=ITSCNT
notification.template.vendorWorkOrder=VWONT
notification.template.customeroverdue=CNORT
notification.template.notifypocreation=POCNT
notification.template.notifymrncreation=MRNCT
notification.template.notifycpevendor=CVENT
notification.template.notifycustomeracceptance=CUANT
notification.template.notifycustomertasks=CUTNT
notification.template.customerwelcome=CHNT
notification.template.customerwelcome.v2=CWMV2
notification.template.circuittermination=CTTNT
notification.template.netpConfiguration=NETPT
notification.template.ssdump.failure=NSSDT
notification.template.taskAssignmentAdmin=TSANT
notification.template.automigration.failure=AMFNT
notification.template.sdwancreation.failure=SCFNT
notification.template.notifyoffnetpocreation=OPCTN
notification.template.placeordertosupplier=POTSN
notification.template.deferredDelivery=CNDD
notification.template.customeroverduehold=CNOHT
notification.template.customeroverduebeforehold=CNOBH
notification.template.dynamicContent=CNDC
notification.template.termination.remainder=TERM_REM
notification.template.trfDateExtension=TDEN
notification.template.offnetRetained=OCRN
notification.template.multiVrfSlaveTrigger.failure=MVSTF
notification.template.terminationNotEligible=NTTNE

customer.support.email=${CUSTOMER_SUPPORT_EMAIL}
notification.mail.queue=notification_mail


queue.createservicesync=createservicesync_queue
queue.createclrsync=createclrsync_queue
queue.checkclrinfosync=checkclrsync_queue
queue.getclrsync=getclrsync_queue
queue.muxinfosync=muxinfosync_queue
queue.assigndummywanipsync=assigndummywanipsync_queue
queue.releasedummywanipsync=releasedummywanipsync_queue

queue.setservice.active=setservice_active_queue
queue.setrenewalservice.active=setrenewalservice_active_queue
queue.muxinfoasync=muxinfoasync_queue
queue.createserviceasync=createserviceasync_queue
queue.getclrasync=getclrasync_queue
queue.validatebtssync=ValidateBtsQueue
queue.ipservicesync=ipservicesync_queue
queue.txdowntimesync=txdowntimesync_queue
queue.ipserviceasync=ipserviceasync_queue
queue.setclrsync=setclrsync_queue
queue.setclrasync=setclrasync_queue
queue.setmfdclrsync=setmfdclrsync_queue
queue.setmfdclrasync=setmfdclrasync_queue
queue.setterminateclrsync=setterminateclrsync_queue
queue.setterminateclrssync=setterminateclrasync_queue
queue.muxinfoasync.submitfailure=muxinfoasync_failure_queue
queue.eorior.dependency=queue_eorior_dependency
rabbitmq.o2c.fulfillmentdate=rabbitmq_o2c_fulfillmentdate
rabbitmq.o2c.oe.fulfillmentdate=rabbitmq_o2c_oe_fulfillmentdate
rabbitmq.odr.oe.process.queue=rabbitmq_odr_oe_process_queue
optimus.audit.save.queue = optimus_audit_save_queue
oms.get.quote.data.by.id = oms_get_quote_data_by_id
oms.get.quotetole.data.by.id = oms_get_quotetole_data_by_id
oms.get.order.by.id = oms_get_order_by_id
oms.get.orderle.by.id = oms_get_orderle_by_id
activation.ip.configuration=activation_ip_configuration
activation.ip.terminate.configuration=activation_ip_terminate_configuration
activation.tx.configuration=activation_tx_configuration
activation.rf.configuration=activation_rf_configuration
activation.rf.terminate.configuration=activation_rf_terminate_configuration
activation.service.detail=activation_service_detail
rabbitmq.discount.price.request=rabbitmq.discount.price.request
activation.dummy.ip.configuration=activation_dummy_ip_configuration
activation.dummy.rf.configuration=activation_dummy_rf_configuration
activation.release.ip.configuration=activation_release_ip_configuration
rabbitmq.location.detail=rabbitmq_location_detail
rabbitmq.suplierle.queue=rabbitmq_supplier_details_customer
rabbitmq.billing.contact.queue=rabbitmq_billing_contact_customer
queue.serviceactivation.handovernote=queue_serviceactivation_handovernote

notification.template.commercial.reminder=CRN
notification.template.commercial.escalation=CEN
notification.template.commercial.approved=CAN
notification.template.commercial.group=CGAN
notification.template.commercial.assigne=CTAT



#sap URl
sap.quantity.detail.url=${SAP_QUANTITY_URL}
sap.mrn.place.order.url=${SAP_MRL_PLACE_ORDER_URL}
sap.mrn.transfer.url=${SAP_WBS_TRANSFER_URL}
sap.autopr.url=${SAP_AUTO_PR_URL}
sap.user.name=${SAP_USER_NAME}
sap.password=${SAP_PASSWORD}
sap.calbe.quantity.detail.url=${SAP_CABLE_QUANTITY_URL}
sap.autopo.url=${SAP_AUTO_PO_URL}

#GeoCode URI
geocode.api.url=${GEOCODE_API_URL}
geocode.api.username=${GEOCODE_API_USERNAME}
geocode.api.password=${GEOCODE_API_PASSWORD}


#google Map API
api.googlemap=https://maps.googleapis.com/maps/api/geocode/json
api.googlemap.key=AIzaSyCRkCzB1UIdv-oAOBg8ALsoCs0uFmeAJlU

oms.get.quote.commercial=oms.get.quote.commercial
rabbitmq.o2c.sitedetail=rabbitmq_o2c_sitedetail




queue.trigger_service_order_rule=queue.trigger_service_order_rule
queue.accountCreateSync=rabbitmq_accountCreateSync
queue.productCommSync.ipc=rabbitmq_productCommSync_ipc
queue.productCommSync=rabbitmq_productCommSync
queue.invoiceGenSync=rabbitmq_invoiceGenSync
queue.serviceactivation.availabilityslots=availableslots_queue

queue.accountCreateSync.network=rabbitmq_accountCreateSync_network
queue.productCommSync.network=rabbitmq_productCommSync_network
queue.invoiceGenSync.network=rabbitmq_invoiceGenSync_network
queue.intl.accountCreateSync.network=rabbitmq_intl_accountCreateSync_network
queue.usage.eventsource=rabbitmq_usage_eventsource

rabbitmq.ipc.si.details.queue=rabbitmq_ipc_si_details_queue
rabbitmq.o2c.si.terminate.queue=rabbitmq_o2c_si_terminate_queue
queue.accountCreateSync.network.cpe=rabbitmq_accountCreateSync_network_cpe
queue.productCommSync.network.cpe=rabbitmq_productCommSync_network_cpe
queue.invoiceGenSync.network.cpe=rabbitmq_invoiceGenSync_network_cpe
queue.lr.service.terminate=rabbitmq_lr_service_terminate
queue.geneva.service.terminate=rabbitmq_geneva_service_terminate
queue.invoice.termination.lr=rabbitmq_invoice_terminate_lr
queue.productTermSync.network=rabbitmq_productTermSync_network
queue.accountCreateSync.check=rabbitmq_accountCreateSync_check
queue.migration=queue_serviceactivation_migration
queue.migration.fti=queue_serviceactivation_migration_fti
queue.teamsdr.billing.check=rabbitmq_teamsdr_billing_check

queue.serviceTermSync.network=rabbit_serviceTermSync_network
queue.productTermSync=rabbitmq_productTermSync
queue.apply.tax=apply_tax_queue
queue.ipc.apply.tax=rabbitmq_ipc_apply_tax_queue

#Cancellation Workflow Queues
queue.cancellationInvoiceGenSync=rabbitmq_cancellation_invoiceGenSync
queue.cancellationProductCommSync=rabbitmq_cancellation_productCommSync
queue.cancellationProductTermSync=rabbitmq_cancellation_productTermSync

rabbitmq.o2c.ipc.order.stage.queue=rabbitmq_o2c_ipc_order_stage_queue
rabbitmq.o2c.ipcfulfillment=rabbitmq_o2c_ipcfulfillment
service.handover.deligate.queue=service_handover_deligate_queue
service.handover.delegate.renewal.noncommercial.queue=service_handover_delegate_renewal_noncommercial_queue
service.handover.delegate.novation.queue=service_handover_delegate_novation_queue
rabbitmq.service.handover.inventory=serviceInventoryHandoverQueue
rabbitmq.service.handover.inventory.sdwan=sdwanInventoryHandoverQueue

rabbitmq.o2c.feasibility=rabbitmq_o2c_feasibility

forex.api.username=${FOREX_API_UNAME}
forex.api.password=${FOREX_API_PWD}
forex.api.url=${FOREX_API_URL}


### WIRELESS ONE QUEUES ####
queue.wireless1.ssdump=queue_wireless1_ssdump
queue.wireless1.getpingtestdetails=queue_wireless1_getpingtestdetails
queue.wireless1.setpingstability=queue_wireless1_setpingstability
queue.rfinventory=rfinventory_queue
queue.rf.e2e.inventory=rfe2einventory_queue

rabbitmq.cpe.bom.rentalsales.queue=rabbitmq_cpe_bom_rentalsales_queue

reminder.cycle=${REMINDER_CYCLE}

rabbitmq.odr.oe.status.queue=rabbitmq_odr_oe_status_queue
rabbitmq.supplerle.attributes=rabbitmq_supplerle_attributes
rabbitmq.getServiceDetailsO2c.queue=get_service_detail_o2c
rabbitmq.o2c.migration.si.details.queue=rabbitmq_o2c_migration_si_details_queue
sap.grn.response=sap_grn_response

mq.sap.grnstatus.queue=mq_sap_grnstatus_queue

rabbitmq.customer.contacts.queue=rabbitmq_customer_contact_details
rabbitmq.gde.sc.fulfillmentdate=rabbitmq_gde_sc_fulfillmentdate
rabbitmq.sa.service.terminate.queue=rabbitmq_sa_service_terminate_queue
rabbitmq.sa.service.fti.netpref.queue=rabbitmq_sa_service_fti_netpref_queue
rabbitmq.o2c.amendment.task=rabbitmq_o2c_amendment_task
rabbitmq.o2c.sdwan.trigger=rabbitmq_o2c_sdwan_trigger_queue
rabbitmq.o2c.teamsdr.trigger=rabbitmq_o2c_teamsdr_trigger
notification.template.serviceCancellation=SCT
notification.template.sdwanTrigger=SDWANO2CT
notification.template.sdwanInvalidServiceCodeTrigger=SDWANO2CISCT
oms.set.lrexport.enable=oms_set_lrexport_enable
rabbitmq.user.details.queue=queue.user.group.details
activation.service.details=activation_service_details
sap.integration.url=sap_integration_url
sap.integration.username=sap_integration_username
sap.integration.password=sap_integration_password
notification.template.lldMailMom=LMT
notification.template.serviceStatusChange=SSCN
rabbitmq.ipc.si.solutions.queue=rabbitmq_ipc_si_solutions_queue
notification.template.unHoldService=SSUN
notification.template.reasignment.pm=SRPT
notification.template.cancellation.initiation=SRCI

## SAP HANA INTEGRATION
sap.hana.quantity.detail.url=http://10.133.209.39:50000/RESTAdapter/OPTIMUS/MATERIAL/STOCK/DISP/OB
sap.hana.mrn.place.order.url=${SAP_MRL_PLACE_ORDER_URL}
sap.hana.mrn.transfer.url=${SAP_WBS_TRANSFER_URL}
sap.hana.autopr.url=${SAP_AUTO_PR_URL}
sap.hana.user.name=hmuvvala
sap.hana.password=Pass@1234
sap.hana.vmi.stock.url=http://10.133.209.39:50000/RESTAdapter/OPTIMUS/VMI/STOCK
sap.hana.wbs.transfer.url=http://10.133.209.39:50000/RESTAdapter/OPTIMUS/WBSTOWBS/TRANSFER/OB
sap.hana.track.cbe.url=http://10.133.209.39:50000/RESTAdapter/OPTIMUS/GOODS/RECEIPT/OB
sap.hana.install.cpe.url=http://10.133.209.38:50000/RESTAdapter/OPTIMUS/GOODS/ISSUE/OB

rabbitmq.macd.detail.commissioned=rabbitmq_macd_detail_commissioned

release.resource.cycle=P30D

termination.l20.queue=termination_l20_queue
termination.update.onnetWirelessDetails.queue=termination_update_onnetWirelessDetails_queue
termination.get.p2pDetails.queue=termination_get_p2pDetails_queue
process.terminate.ten.percent=termination_queue_ten_percent
process.drop.termination.quote=drop_termination_quote_queue
#ipc auto provision to catalyst
rabbitmq.o2c.ipc.autoProvision=o2c_oms_ipc_auto_provision_catalyst
slave.fulfillment.trigger.queue=slave_fulfillment_trigger_queue
rabbitmq.o2c.ipc.catalyst.vdom=rabbitmq_o2c_ipc_catalyst_vdom
rabbitmq.o2c.ipc.update.product.attributes=rabbitmq_o2c_ipc_update_product_attributes

queue.persist.migrationData = queue_persist_migrationData

rabbitmq.gsc.fulfillment=rabbitmq_gsc_fulfillment

gsc.confignmbrmapping.url=${GSC_CONFIG_NBR_MAPPING_URL_PREFIX}/nas/v1/service/bulk
gsc.confignmbrmapping.authorization=${GSC_CONFIG_NBR_MAPPING_AUTHORIZATION}
gsc.confignmbrmapping.zauthorization=${GSC_CONFIG_NBR_MAPPING_ZAUTHORIZATION}

#Get Reserve Number from REPC API
gsc.getvanitynumbers.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.0/vanityNumbers
gsc.getvanitynumbers.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Reserve Number in REPC API
gsc.putvanitynumbers.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.0/vanityNumbers/{0}
gsc.putvanitynumbers.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Get Suppliers from REPC API
gsc.getsupplier.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.1/suppliers
gsc.getsupplier.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Create Order in REPC API
gsc.createorderinrepc.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.0/numbers
gsc.createorderinrepc.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Patch Order in REPC API
gsc.patchorderinrepc.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.0/numbers/{0}
gsc.patchorderinrepc.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Generate Routing Number in REPC API
gsc.getroutingnumber.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/accessservices/v1.0/routingnumber
gsc.getroutingnumber.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Get DID Suppliers from REPC API
gsc.getdidsupplier.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/domesticServices/v1.0/suppliers
gsc.getdidsupplier.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#Get Sites from REPC API
gsc.getsite.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/connections/v1.0/sites
gsc.getsite.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

gsc.order.did.number.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/domesticServices/v1.0/numbers
gsc.patch.did.number.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/domesticServices/v1.0/numbers/

gsc.createcircuitgroup.url=${GSC_VOICEINVENTORY_URL_PREFIX}/voiceinventory/connections/v1.0/circuitGroups
gsc.createcircuitgroup.authorization=${GSC_VOICEINVENTORY_AUTHORIZATION}

#IZOPC Queue
queue.serviceactivation.vpnsolution=queue_serviceactivation_vpnsolution
queue.izopc.serviceactivation.handovernote=queue_izopc_serviceactivation_handovernote

rabbitmq.o2c.teamsdr.managed.services=rabbitmq_o2c_teamsdr_managed_services

rabbitmq.o2c.ipc.catalyst.security.group=rabbitmq_o2c_ipc_catalyst_security_group
